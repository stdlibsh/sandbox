name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools poetry
          poetry config virtualenvs.create false
          poetry install
      - name: Configure git
        run: |
          git config --global user.email "octocat@github.com"
          git config --global user.name "The Octocat"
      - name: Bump version
        run: bump2version patch
      - name: Push changes to repo
        run: git push origin master --follow-tags
      - name: Export app version
        run: echo "VERSION=$(grep -oP --color=never '\d+\.\d+\.\d+' .bumpversion.cfg)" >> $GITHUB_ENV
      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      - name: Install beta component for gcloud
        run: gcloud components install beta --quiet
      - name: Configure Docker
        run: gcloud beta auth configure-docker us-central1-docker.pkg.dev --quiet
      - name: Download latest Docker image
        run: docker image pull ${{ secrets.GCP_ARTIFACT_REGISTRY }}/sandbox:latest || true
      - name: Build Docker image
        run: docker image build -t sandbox --cache-from ${{ secrets.GCP_ARTIFACT_REGISTRY }}/sandbox:latest .
      - name: Tag Docker image
        run: |
          docker image tag sandbox ${{ secrets.GCP_ARTIFACT_REGISTRY }}/sandbox:latest
          docker image tag sandbox ${{ secrets.GCP_ARTIFACT_REGISTRY }}/sandbox:$VERSION
      - name: Push Docker image
        run: |
          docker image push ${{ secrets.GCP_ARTIFACT_REGISTRY }}/sandbox:latest
          docker image push ${{ secrets.GCP_ARTIFACT_REGISTRY }}/sandbox:$VERSION
